generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model comment {
  id                  Int                   @id @default(autoincrement())
  thread_id           Int?
  user_id             String
  author              String
  content             String
  anonymous           Boolean               @default(false)
  verified            Boolean               @default(false)
  created_at          DateTime              @default(now()) @db.Timestamp(6)
  thread              thread?               @relation(fields: [thread_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  comment_reply       comment_reply[]
  user_upvote_comment user_upvote_comment[]
}

model tag {
  id         Int          @id @default(autoincrement())
  name       String
  thread_tag thread_tag[]
}

model thread {
  id            Int          @id @default(autoincrement())
  user_id       String
  author        String
  title         String
  content       String
  anonymous     Boolean      @default(false)
  comment_count Int          @default(0)
  created_at    DateTime     @default(now()) @db.Timestamp(6)
  comment       comment[]
  thread_tag    thread_tag[]
}

model thread_tag {
  thread_id Int
  tag_id    Int
  tag       tag    @relation(fields: [tag_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  thread    thread @relation(fields: [thread_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([thread_id, tag_id])
}

model comment_reply {
  id         Int      @id @default(autoincrement())
  comment_id Int?
  user_id    String
  author     String
  content    String
  anonymous  Boolean  @default(false)
  verified   Boolean  @default(false)
  created_at DateTime @default(now()) @db.Timestamp(6)
  comment    comment? @relation(fields: [comment_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model user_upvote_comment {
  user_id    String
  comment_id Int
  comment    comment @relation(fields: [comment_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([user_id, comment_id])
}
